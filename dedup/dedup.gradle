plugins {
    id 'com.google.protobuf' version '0.8.8'
}

ext {
    protobufVersion = '3.7.1'
    protocVersion = protobufVersion
    grpcVersion = '1.29.0'
    slf4jVersion = '1.8.0-alpha2'
    logbackVersion = '1.3.0-alpha4'
    mockitoVersion = '3.3.0'
}

configurations.all {
    // These forced configurations might cause issues for springboot apps,
    // If you are facing ClassNotFound: "org.slf4j...StaticLoggerBinder", set the following
    //  System.setProperty("org.springframework.boot.logging.LoggingSystem", "none")
    //  https://github.com/spring-projects/spring-boot/issues/12649 -- lists the reasons for the above issue
    resolutionStrategy.force 'com.google.guava:guava:28.0-jre'
    resolutionStrategy.force 'org.springframework.boot:spring-boot-starter:2.1.4.RELEASE'
    resolutionStrategy.force "org.slf4j:slf4j-api:${slf4jVersion}"
    resolutionStrategy.force "ch.qos.logback:logback-classic:${logbackVersion}"
    resolutionStrategy.force "ch.qos.logback:logback-core:${logbackVersion}"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

test{
    useJUnitPlatform {
    }
}
dependencies {
    implementation 'org.rocksdb:rocksdbjni:6.5.3'
    implementation 'org.springframework.boot:spring-boot-starter:2.1.4.RELEASE'
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    implementation "org.apache.kafka:kafka-clients:2.1.0"
    implementation "org.apache.kafka:kafka_2.11:2.1.0"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation 'org.springframework.kafka:spring-kafka-test:2.2.1.RELEASE'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.0'
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.3.2'
}
